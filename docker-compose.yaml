version: "3.9"
services:
    service-registry:
        build:
            context: .
            dockerfile: ./Dockerfile
            args:
                SERVICE: service-registry
        container_name: service-registry
        ports:
            - "8761:8761"
    config-server:
        build:
            context: .
            dockerfile: ./Dockerfile
            args:
                SERVICE: config-server
        container_name: config-server
        ports:
            - "8888:8888"
        depends_on:
            - service-registry
        environment:
            - GITHUB_TOKEN=${GITHUB_TOKEN}
    api-gateway:
        build:
            context: .
            dockerfile: ./Dockerfile
            args:
                SERVICE: api-gateway
        container_name: api-gateway
        ports:
            - "8080:8080"
        depends_on:
            - service-registry
            - config-server
        environment:
            - SPRING_APPLICATION_NAME=${APP_NAME:-api-gateway}
            - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
            - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
    redpanda:
        image: docker.redpanda.com/redpandadata/redpanda:latest
        container_name: redpanda
        command: redpanda start --smp 1 --overprovisioned --node-id 0 --check=false
        ports:
            - "9092:9092"
            - "9644:9644"
        environment:
            - REDPANDA_AUTO_CREATE_TOPICS=true
    zipkin:
        image: openzipkin/zipkin
        container_name: zipkin
        ports:
            - "9411:9411"
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus-lite.yaml:/etc/prometheus/prometheus.yaml:ro
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        depends_on:
            - prometheus
        ports:
            - "3000:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
    postgres:
        image: postgres:16-alpine
        container_name: postgres
        environment:
            - POSTGRES_USER=dev
            - POSTGRES_PASSWORD=dev
            - POSTGRES_DB=appdb
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
volumes:
    pgdata:

